{
  "$schema": "https://json.schemastore.org/template.json",
  "author": "Branislav Davidovic",
  "classifications": [
    "Windows",
    "Linux",
    "macOS",
    "Cloud",
    "Service",
    "Web"
  ],
  "name": "Microservice Template for .NET",
  "shortName": "microservicetemplate",
  "sourceName": "Microservice.Template",
  "identity": "Microservice.Template",
  "tags": {
    "language": "C#",
    "type": "solution"
  },
  "preferNameDirectory": false,
  "symbols": {
    "Framework": {
      "type": "parameter",
      "description": "The target .NET version for the project.",
      "datatype": "choice",
      "choices": [
        {
          "choice": "net6.0"
        },
        {
          "choice": "net7.0"
        },
        {
          "choice": "net8.0"
        }
      ],
      "defaultValue": "net7.0",
      "replaces": "{{TargetFramework}}",
      "isRequired": true
    },
    "EnableREST": {
      "displayName": "REST API",
      "type": "parameter",
      "description": "Add support for REST API (http) communication.",
      "datatype": "bool",
      "defaultValue": "true",
      "isRequired": true
    },
    "EnableGrpc": {
      "displayName": "gRPC",
      "type": "parameter",
      "description": "Add support for gRPC communication.",
      "datatype": "bool",
      "defaultValue": "false",
      "isRequired": true
    },
    "EnableMessaging": {
      "displayName": "Message Broker",
      "type": "parameter",
      "description": "Add support for message broker communication.",
      "datatype": "bool",
      "defaultValue": "false",
      "isRequired": true
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "exclude": [
            "**/[Bb]in/**",
            "**/[Oo]bj/**",
            ".git/**",
            ".github/**",
            "**/.vs/**",
            ".gitignore",
            ".template.config/**",
            "LICENSE",
            "README.md"
          ]
        },
        {
          "condition": "(!EnableREST)",
          "exclude": [
            "src/Communication/Microservice.Template.Communication.Rest/**",
            "src/Infrastructure/Microservice.Template.DependencyInjection/Communication/HttpServicesExtensions.cs"
          ]
        },
        {
          "condition": "(!EnableGrpc)",
          "exclude": [
            "src/Communication/Microservice.Template.Communication.Grpc/**",
            "src/Infrastructure/Microservice.Template.DependencyInjection/Communication/GrpcServicesExtensions.cs"
          ]
        },
        {
          "condition": "(!EnableMessaging)",
          "exclude": [
            "src/Communication/Microservice.Template.Communication.Message/**",
            "src/Infrastructure/Microservice.Template.DependencyInjection/Communication/MessageServicesExtensions.cs"
          ]
        }
      ]
    }
  ]
}